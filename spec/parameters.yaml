ResourceId:
  name: resourceId
  in: path
  required: true
  description: The resource ID
  type: string
WebhookPostRequest:
  name: webhookBody
  in: body
  required: true
  description: New webhook
  schema:
    type: object
    properties:
      url:
        example: https://example.com/example
        type: string
      secret:
        example: <password> 
        type: string
      sign: 
        type: boolean
      on: 
        type: boolean
    required:
      - url
      - sign
      - on
FeatureFlagPostRequest:
  name: featureFlagBody
  in: body
  required: true
  description: Create a new feature flag
  schema:
    type: object
    properties:
      name:
        type: string
        description: A human-friendly name for the feature flag. Remember to note if this flag is intended to be temporary or permanent.
      key:
        type: string
        description: A unique key that will be used to reference the flag in your code
      variations:
        type: array
        items:
          $ref: '#/definitions/Variation'
        description: An array of possible variations for the flag.
      temporary: 
        type: boolean
        description: Whether or not the flag is a temporary flag
      tags:
        type: array
        items:
          type: string
        description: Tags for the feature flag
      includeInSnippet:
        type: boolean
        description: Whether or not this flag should be made available to the client-side JavaScript SDK
    required:
      - name
      - key
      - variations
ProjectPostRequest:
  name: projectBody
  in: body
  required: true
  description: New project
  schema:
    type: object
    properties:
      name:
        type: string
      key:
        type: string
    required:
      - name
      - key
EnvironmentPostRequest:
  name: environmentBody
  in: body
  required: true
  description: New environment
  schema:
    type: object
    properties:
      name:
        type: string
        description: The name of the new environment
        example: Development
      key:
        type: string
        description: A project-unique key for the new environment
        example: dev
      color:
        type: string
        description: A color swatch (as an RGB hex value with no leading '#', e.g. C8C8C8)
        example: 417505
      defaultTtl:
        type: number
        description: The default TTL for the new environment
        example: 0
    required:
      - name
      - key
      - color
ProjectKey:
  name: projectKey
  in: path
  required: true
  description: The project key, used to tie the flags together under one project so they can be managed together.
  type: string
EnvironmentKey:
  name: environmentKey
  in: path
  required: true
  description: The environment key
  type: string
EnvironmentKeyQuery:
  name: environmentKeyQuery
  in: query
  required: false
  description: The environment key
  type: string
FeatureFlagKey:
  name: featureFlagKey
  in: path
  required: true
  description: The feature flag's key. The key identifies the flag in your code.
  type: string
UserKey:
  name: userKey
  in: path
  required: true
  description: The user's key
  type: string
Tag:
  name: tag
  in: query
  required: false
  description: Filter by tag. A tag can be used to group flags across projects.
  type: string
Limit:
  name: limit
  in: query
  required: false
  description: Pagination limit
  type: number
Query:
  name: q
  in: query
  required: false
  description: Search query
  type: string
Offset:
  name: offset
  in: query
  required: false
  description: Specifies the first item to return in the collection
  type: number
After:
  name: after
  in: query
  required: false
  description: A unix epoch time in milliseconds specifying the maximum last time a user requested a feature flag
  type: integer
PatchRequest:
  name: patchDelta
  in: body
  required: true
  description: 'http://jsonpatch.com/'
  schema:
    type: array
    items:
      type: object
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: object
      required:
        - op
        - path
        - value
UserSettingsPutRequest:
  name: userSettingsBody
  in: body
  required: true
  schema:
    type: object
    properties:
      setting:
        type: boolean
        description: >-
          The variation value to set for the user. Must match the variation type of
          the flag.