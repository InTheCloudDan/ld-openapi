openapi: '3.0.0'
info:
  version: 'v2'
  title: LaunchDarkly REST API
  description: | 
    We have an API-first philosophy at LaunchDarkly. Every product feature is built API-first, and our entire product is driven by our REST API, so it's heavily tested and complete.
    
    If you want to build a custom integration, export your data, or build custom scripts to automate your feature flag workflow, this API guide is the place to start.
  termsOfService: https://launchdarkly.com/terms
  contact:
    name: LaunchDarkly Support Team
    email: support@launchdarkly.com
    url: http://support.launchdarkly.com
  license:
    name: Apache
    url: http://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://app.launchdarkly.com/api/v2
paths:
  /webhooks:
    get:
      summary: Fetch a list of all webhooks
      operationId: getWebhooks
      responses:
        '200':
          description: Webhooks response
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Webhooks'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Create a webhook
      operationId: postWebhook
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      requestBody:
        $ref: '#/components/requestBodies/WebhookPost'
  /webhooks/{id}:
    get:
      summary: Get a single webhook by ID
      operationId: getWebhook
      parameters:
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          description: Webhook response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
    patch:
      summary: Modify a single webhook by ID
      operationId: patchWebhook
      parameters:
        - $ref: '#/components/parameters/ID'
      responses:
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409'
      requestBody:
        $ref: '#/components/requestBodies/WebhookPatch'
    delete:
      summary: Delete a single webhook by ID
      operationId: deleteWebhook
      parameters:
        - $ref: '#/components/parameters/ID'
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
components:
  securitySchemes:
    accessToken:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Webhook:
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        _id:
          type: string
        url:
          type: string
        secret:
          type: string
        on:
          type: boolean
        tags:
          type: array
          items: 
            type: string
    Webhooks:
      properties:
        _links:
          $ref: '#components/schemas/Links'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
    Link:
      properties:
        href:
          type: string     
        'type':
          type: string
    Links:
      properties:
        'parent':
          $ref: '#/components/schemas/Link'
        'self':
          $ref: '#/components/schemas/Link'
  parameters:
    ID:
      name: id
      in: path
      description: 'The resource ID'
      required: true
      schema:
        type: string
  responses:
    '201':
      description: Resource created
    '204':
      description: Action completed successfully
    '400':
      description: Invalid request body
    '401':
      description: Invalid access token
    '404':
      description: Invalid ID
    '409':
      description: Status conflict
  requestBodies:
    WebhookPost:
      description: Webhook to be created
      content:
        application/json:
          schema:
            properties:
              url:
                type: string
              secret:
                type: string
              sign: 
                type: boolean
              on: 
                type: boolean
      required: true
    WebhookPatch:
      description: Webhook patch delta
      content:
        application/json:
          schema:
            properties:
              op:
                type: string
              path:
                type: string
              value:
                type: boolean
      required: true